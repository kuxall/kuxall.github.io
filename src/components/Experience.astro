---
interface ExperienceItem {
  title: string;
  company: string;
  location: string;
  period: string;
  responsibilities: string[];
}

interface Props {
  experiences: ExperienceItem[];
}

const { experiences } = Astro.props;
---

<section id="experience" class="section">
  <div class="container">
    <h2 class="section-title">Professional Experience</h2>
    
    <div class="max-w-4xl mx-auto space-y-6">
      {experiences.map((exp) => (
        <div class="card p-6 hover:shadow-lg transition-shadow duration-300">
          <div class="flex flex-col md:flex-row md:items-start md:justify-between mb-3">
            <div>
              <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-1">
                {exp.title}
              </h3>
              <p class="text-lg text-primary-600 dark:text-primary-400 font-semibold">
                {exp.company}
              </p>
            </div>
            <div class="text-sm text-gray-500 dark:text-gray-400 mt-2 md:mt-0 md:text-right">
              <p class="font-medium">{exp.period}</p>
              <p>{exp.location}</p>
            </div>
          </div>
          
          <ul class="space-y-2">
            {exp.responsibilities.map((resp) => (
              <li class="flex items-start gap-2 text-gray-700 dark:text-gray-300">
                <svg class="w-5 h-5 text-primary-600 dark:text-primary-400 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                </svg>
                <span class="flex-1">{resp}</span>
              </li>
            ))}
          </ul>
        </div>
      ))}
    </div>
  </div>
</section>
