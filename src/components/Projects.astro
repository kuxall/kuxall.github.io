---
import type { ProcessedProject } from '../types/github';

interface Props {
  projects: ProcessedProject[];
}

const { projects } = Astro.props;

function formatDate(dateString: string): string {
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', { year: 'numeric', month: 'short' });
}

function truncateDescription(text: string, maxLength: number = 140): string {
  if (text.length <= maxLength) return text;
  return text.substring(0, maxLength).trim() + '...';
}
---

<section id="projects" class="section">
  <div class="container">
    <h2 class="section-title">Featured Projects</h2>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12">
      {projects.map((project) => (
        <div class="card p-6 hover:shadow-xl hover:-translate-y-1 transition-all duration-300">
          <div class="flex items-start justify-between mb-4">
            <h3 class="text-xl font-bold text-gray-900 dark:text-white flex-1">
              {project.name}
            </h3>
            <div class="flex items-center gap-2 text-sm text-gray-500 dark:text-gray-400 flex-shrink-0 ml-2">
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
              </svg>
              <span>{project.stars}</span>
            </div>
          </div>
          
          <p class="text-gray-600 dark:text-gray-300 mb-4 text-sm leading-relaxed">
            {truncateDescription(project.description)}
          </p>
          
          <div class="flex flex-wrap gap-2 mb-4">
            {project.language && (
              <span class="badge badge-primary text-xs">
                {project.language}
              </span>
            )}
            {project.topics.slice(0, 3).map((topic) => (
              <span class="badge bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 text-xs">
                {topic}
              </span>
            ))}
          </div>
          
          <div class="flex items-center justify-between pt-4 border-t border-gray-200 dark:border-gray-700">
            <span class="text-xs text-gray-500 dark:text-gray-400">
              Updated {formatDate(project.lastUpdated)}
            </span>
            <div class="flex gap-2">
              <a
                href={project.repoUrl}
                target="_blank"
                rel="noopener noreferrer"
                class="text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 text-sm font-medium"
              >
                Code
              </a>
              {project.homepageUrl && (
                <>
                  <span class="text-gray-300 dark:text-gray-600">|</span>
                  <a
                    href={project.homepageUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 text-sm font-medium"
                  >
                    Demo
                  </a>
                </>
              )}
            </div>
          </div>
        </div>
      ))}
    </div>
    
    <div class="text-center">
      <a
        href="https://github.com/Kuxall?tab=repositories"
        target="_blank"
        rel="noopener noreferrer"
        class="btn btn-outline"
      >
        View All Projects on GitHub
        <svg class="w-5 h-5 inline-block ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
        </svg>
      </a>
    </div>
  </div>
</section>
